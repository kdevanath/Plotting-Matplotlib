{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Observations and Insights "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 354,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mouse ID</th>\n",
       "      <th>Drug Regimen</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age_months</th>\n",
       "      <th>Weight (g)</th>\n",
       "      <th>Timepoint</th>\n",
       "      <th>Tumor Volume (mm3)</th>\n",
       "      <th>Metastatic Sites</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>5</td>\n",
       "      <td>38.825898</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>10</td>\n",
       "      <td>35.014271</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>15</td>\n",
       "      <td>34.223992</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>32.997729</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Mouse ID Drug Regimen   Sex  Age_months  Weight (g)  Timepoint  \\\n",
       "0     k403     Ramicane  Male          21          16          0   \n",
       "1     k403     Ramicane  Male          21          16          5   \n",
       "2     k403     Ramicane  Male          21          16         10   \n",
       "3     k403     Ramicane  Male          21          16         15   \n",
       "4     k403     Ramicane  Male          21          16         20   \n",
       "\n",
       "   Tumor Volume (mm3)  Metastatic Sites  \n",
       "0           45.000000                 0  \n",
       "1           38.825898                 0  \n",
       "2           35.014271                 1  \n",
       "3           34.223992                 1  \n",
       "4           32.997729                 1  "
      ]
     },
     "execution_count": 354,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dependencies and Setup\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import scipy.stats as st\n",
    "import numpy as np\n",
    "\n",
    "# Study data files\n",
    "mouse_metadata_path = \"data/Mouse_metadata.csv\"\n",
    "study_results_path = \"data/Study_results.csv\"\n",
    "\n",
    "# Read the mouse data and the study results\n",
    "mouse_metadata = pd.read_csv(mouse_metadata_path)\n",
    "study_results = pd.read_csv(study_results_path)\n",
    "\n",
    "# Combine the data into a single dataset\n",
    "tumor_animal_study_raw = pd.merge(mouse_metadata,study_results,on='Mouse ID',how='outer')\n",
    "\n",
    "# Display the data table for preview\n",
    "tumor_animal_study_raw.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 355,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "249"
      ]
     },
     "execution_count": 355,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checking the number of mice.\n",
    "number_of_mice = mouse_metadata['Mouse ID'].count()\n",
    "number_of_mice"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 356,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Getting the duplicate mice by ID number that shows up for Mouse ID and Timepoint. \n",
    "#Please see below\n",
    "tumor_animal_study_raw.count()\n",
    "tumor_animal_study_raw.to_csv(\"study.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 357,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mouse ID</th>\n",
       "      <th>Drug Regimen</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age_months</th>\n",
       "      <th>Weight (g)</th>\n",
       "      <th>Timepoint</th>\n",
       "      <th>Tumor Volume (mm3)</th>\n",
       "      <th>Metastatic Sites</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>909</th>\n",
       "      <td>g989</td>\n",
       "      <td>Propriva</td>\n",
       "      <td>Female</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911</th>\n",
       "      <td>g989</td>\n",
       "      <td>Propriva</td>\n",
       "      <td>Female</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>5</td>\n",
       "      <td>47.570392</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>913</th>\n",
       "      <td>g989</td>\n",
       "      <td>Propriva</td>\n",
       "      <td>Female</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>10</td>\n",
       "      <td>49.880528</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>915</th>\n",
       "      <td>g989</td>\n",
       "      <td>Propriva</td>\n",
       "      <td>Female</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>15</td>\n",
       "      <td>53.442020</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>917</th>\n",
       "      <td>g989</td>\n",
       "      <td>Propriva</td>\n",
       "      <td>Female</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>20</td>\n",
       "      <td>54.657650</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Mouse ID Drug Regimen     Sex  Age_months  Weight (g)  Timepoint  \\\n",
       "909     g989     Propriva  Female          21          26          0   \n",
       "911     g989     Propriva  Female          21          26          5   \n",
       "913     g989     Propriva  Female          21          26         10   \n",
       "915     g989     Propriva  Female          21          26         15   \n",
       "917     g989     Propriva  Female          21          26         20   \n",
       "\n",
       "     Tumor Volume (mm3)  Metastatic Sites  \n",
       "909           45.000000                 0  \n",
       "911           47.570392                 0  \n",
       "913           49.880528                 0  \n",
       "915           53.442020                 0  \n",
       "917           54.657650                 1  "
      ]
     },
     "execution_count": 357,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Optional: Get all the data for the duplicate mouse ID. \n",
    "\n",
    "dup_rows = tumor_animal_study_raw.duplicated(subset=['Mouse ID','Timepoint'])\n",
    "tumor_animal_study_raw[dup_rows]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 358,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Mouse ID              1888\n",
       "Drug Regimen          1888\n",
       "Sex                   1888\n",
       "Age_months            1888\n",
       "Weight (g)            1888\n",
       "Timepoint             1888\n",
       "Tumor Volume (mm3)    1888\n",
       "Metastatic Sites      1888\n",
       "dtype: int64"
      ]
     },
     "execution_count": 358,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a clean DataFrame by dropping the duplicate mouse by its ID.\n",
    "tumor_animal_study = tumor_animal_study_raw.drop_duplicates(subset=['Mouse ID','Timepoint'])\n",
    "tumor_animal_study.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 359,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "249\n"
     ]
    }
   ],
   "source": [
    "# Checking the number of mice in the clean DataFrame.\n",
    "print(len(tumor_animal_study['Mouse ID'].unique()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Summary Statistics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 360,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Age_months', 'Weight (g)', 'Timepoint', 'Tumor Volume (mm3)',\n",
      "       'Metastatic Sites'],\n",
      "      dtype='object')\n",
      "                   Mean     Median  Std Dev.   Variance       SEM\n",
      "Drug Regimen                                                     \n",
      "Capomulin     40.675741  41.557809  4.994774  24.947764  0.329346\n",
      "Ceftamin      52.591172  51.776157  6.268188  39.290177  0.469821\n",
      "Infubinol     52.884795  51.820584  6.567243  43.128684  0.492236\n",
      "Ketapril      55.235638  53.698743  8.279709  68.553577  0.603860\n",
      "Naftisol      54.331565  52.509285  8.134708  66.173479  0.596466\n",
      "Placebo       54.033581  52.288934  7.821003  61.168083  0.581331\n",
      "Propriva      52.393463  50.909965  6.568014  43.138803  0.525862\n",
      "Ramicane      40.216745  40.673236  4.846308  23.486704  0.320955\n",
      "Stelasyn      54.233149  52.431737  7.710419  59.450562  0.573111\n",
      "Zoniferol     53.236507  51.818479  6.966589  48.533355  0.516398\n"
     ]
    }
   ],
   "source": [
    "# Generate a summary statistics table of mean, median, variance, standard deviation, and SEM of the tumor volume for each regimen\n",
    "\n",
    "# Use groupby and summary statistical methods to calculate the following properties of each drug regimen: \n",
    "# mean, median, variance, standard deviation, and SEM of the tumor volume. \n",
    "# Assemble the resulting series into a single summary dataframe.\n",
    "tumor_vol_mean = tumor_animal_study.groupby(['Drug Regimen']).mean()\n",
    "print(tumor_vol_mean.columns)\n",
    "tumor_median = tumor_animal_study.groupby(['Drug Regimen']).median()\n",
    "tumor_std_dev = tumor_animal_study.groupby(['Drug Regimen']).std()\n",
    "tumor_variance = tumor_animal_study.groupby(['Drug Regimen']).var()\n",
    "tumor_sem = tumor_animal_study.groupby(['Drug Regimen']).sem()\n",
    "tumor_study_stats = pd.DataFrame({'Mean': tumor_vol_mean['Tumor Volume (mm3)'],\n",
    "                                 'Median':tumor_median['Tumor Volume (mm3)'],\n",
    "                                 'Std Dev.':tumor_std_dev['Tumor Volume (mm3)'],\n",
    "                                 'Variance':tumor_variance['Tumor Volume (mm3)'],\n",
    "                                 'SEM':tumor_sem['Tumor Volume (mm3)']})\n",
    "print(tumor_study_stats)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 361,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"5\" halign=\"left\">Tumor Volume (mm3)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>median</th>\n",
       "      <th>std</th>\n",
       "      <th>var</th>\n",
       "      <th>sem</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Drug Regimen</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Capomulin</th>\n",
       "      <td>40.675741</td>\n",
       "      <td>41.557809</td>\n",
       "      <td>4.994774</td>\n",
       "      <td>24.947764</td>\n",
       "      <td>0.329346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ceftamin</th>\n",
       "      <td>52.591172</td>\n",
       "      <td>51.776157</td>\n",
       "      <td>6.268188</td>\n",
       "      <td>39.290177</td>\n",
       "      <td>0.469821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Infubinol</th>\n",
       "      <td>52.884795</td>\n",
       "      <td>51.820584</td>\n",
       "      <td>6.567243</td>\n",
       "      <td>43.128684</td>\n",
       "      <td>0.492236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ketapril</th>\n",
       "      <td>55.235638</td>\n",
       "      <td>53.698743</td>\n",
       "      <td>8.279709</td>\n",
       "      <td>68.553577</td>\n",
       "      <td>0.603860</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Naftisol</th>\n",
       "      <td>54.331565</td>\n",
       "      <td>52.509285</td>\n",
       "      <td>8.134708</td>\n",
       "      <td>66.173479</td>\n",
       "      <td>0.596466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Placebo</th>\n",
       "      <td>54.033581</td>\n",
       "      <td>52.288934</td>\n",
       "      <td>7.821003</td>\n",
       "      <td>61.168083</td>\n",
       "      <td>0.581331</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Propriva</th>\n",
       "      <td>52.393463</td>\n",
       "      <td>50.909965</td>\n",
       "      <td>6.568014</td>\n",
       "      <td>43.138803</td>\n",
       "      <td>0.525862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ramicane</th>\n",
       "      <td>40.216745</td>\n",
       "      <td>40.673236</td>\n",
       "      <td>4.846308</td>\n",
       "      <td>23.486704</td>\n",
       "      <td>0.320955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Stelasyn</th>\n",
       "      <td>54.233149</td>\n",
       "      <td>52.431737</td>\n",
       "      <td>7.710419</td>\n",
       "      <td>59.450562</td>\n",
       "      <td>0.573111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zoniferol</th>\n",
       "      <td>53.236507</td>\n",
       "      <td>51.818479</td>\n",
       "      <td>6.966589</td>\n",
       "      <td>48.533355</td>\n",
       "      <td>0.516398</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Tumor Volume (mm3)                                          \n",
       "                           mean     median       std        var       sem\n",
       "Drug Regimen                                                             \n",
       "Capomulin             40.675741  41.557809  4.994774  24.947764  0.329346\n",
       "Ceftamin              52.591172  51.776157  6.268188  39.290177  0.469821\n",
       "Infubinol             52.884795  51.820584  6.567243  43.128684  0.492236\n",
       "Ketapril              55.235638  53.698743  8.279709  68.553577  0.603860\n",
       "Naftisol              54.331565  52.509285  8.134708  66.173479  0.596466\n",
       "Placebo               54.033581  52.288934  7.821003  61.168083  0.581331\n",
       "Propriva              52.393463  50.909965  6.568014  43.138803  0.525862\n",
       "Ramicane              40.216745  40.673236  4.846308  23.486704  0.320955\n",
       "Stelasyn              54.233149  52.431737  7.710419  59.450562  0.573111\n",
       "Zoniferol             53.236507  51.818479  6.966589  48.533355  0.516398"
      ]
     },
     "execution_count": 361,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Generate a summary statistics table of mean, median, variance, standard deviation, and SEM of the tumor volume for each regimen\n",
    "\n",
    "# Using the aggregation method, produce the same summary statistics in a single line\n",
    "tumor_study_stats_agg = tumor_animal_study.groupby(['Drug Regimen']).agg( {'Tumor Volume (mm3)'\n",
    "                                                                           :['mean','median','std','var','sem']})\n",
    "tumor_study_stats_agg"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Bar and Pie Charts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 362,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Generate a bar plot showing the total number of unique mice tested on each drug regimen using Pandas Plot.\n",
    "unique_mice_count = tumor_animal_study['Drug Regimen'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 363,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Mice')"
      ]
     },
     "execution_count": 363,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x216 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "unique_mice_count.plot(kind='bar',facecolor='red',title='Drug Regimen Vs. Unique Mice',figsize=(20,3),alpha=0.5)\n",
    "plt.ylabel(\"Mice\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 364,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([<matplotlib.axis.XTick at 0x7f8ca707b6a0>,\n",
       "  <matplotlib.axis.XTick at 0x7f8ca7073f60>,\n",
       "  <matplotlib.axis.XTick at 0x7f8ca7073cf8>,\n",
       "  <matplotlib.axis.XTick at 0x7f8ca700d5c0>,\n",
       "  <matplotlib.axis.XTick at 0x7f8ca700da90>,\n",
       "  <matplotlib.axis.XTick at 0x7f8ca700de10>,\n",
       "  <matplotlib.axis.XTick at 0x7f8ca7016320>,\n",
       "  <matplotlib.axis.XTick at 0x7f8ca70167f0>,\n",
       "  <matplotlib.axis.XTick at 0x7f8ca7016cc0>,\n",
       "  <matplotlib.axis.XTick at 0x7f8ca701e1d0>],\n",
       " <a list of 10 Text xticklabel objects>)"
      ]
     },
     "execution_count": 364,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x216 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate a bar plot showing the total number of unique mice tested on each drug regimen using PyPlot.\n",
    "unique_mice_count_plt = unique_mice_count.reset_index()\n",
    "x_axis = np.arange(len(unique_mice_count_plt))\n",
    "tick_locations = [x for x in x_axis]\n",
    "plt.figure(figsize=(20,3))\n",
    "plt.title(\"DrugRegimen Vs. Mice\")\n",
    "plt.ylabel(\"Mice\")\n",
    "plt.xlabel(\"Drug Regimen\")\n",
    "plt.bar(x_axis, unique_mice_count_plt['Drug Regimen'], color='r',alpha=0.5, align=\"center\")\n",
    "plt.xticks(tick_locations,unique_mice_count_plt['index'], rotation=\"vertical\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 365,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(-1.1053783437113598,\n",
       " 1.100256111605303,\n",
       " -1.103265408136953,\n",
       " 1.1062425414441643)"
      ]
     },
     "execution_count": 365,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate a pie plot showing the distribution of female versus male mice using pandas\n",
    "\n",
    "study_by_sex = tumor_animal_study.groupby('Sex')\n",
    "count_study_by_sex = study_by_sex.count() \n",
    "count_study_by_sex.plot(kind=\"pie\", y='Mouse ID', title=(\"Female & Male mouse distribution\"),autopct=\"%1.1f%%\")\n",
    "plt.axis(\"equal\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 366,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(-1.1053783437113598,\n",
       " 1.100256111605303,\n",
       " -1.103265408136953,\n",
       " 1.1062425414441643)"
      ]
     },
     "execution_count": 366,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate a pie plot showing the distribution of female versus male mice using pyplot\n",
    "gender_plt = count_study_by_sex.reset_index()\n",
    "plt.pie(gender_plt['Mouse ID'],labels=gender_plt['Sex'],autopct=\"%1.1f%%\")\n",
    "plt.title(\"Female & Male mouse distribution\")\n",
    "plt.axis(\"equal\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Quartiles, Outliers and Boxplots"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mouse ID</th>\n",
       "      <th>Drug Regimen</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age_months</th>\n",
       "      <th>Weight (g)</th>\n",
       "      <th>Timepoint</th>\n",
       "      <th>Tumor Volume (mm3)</th>\n",
       "      <th>Metastatic Sites</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>5</td>\n",
       "      <td>38.825898</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>10</td>\n",
       "      <td>35.014271</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>15</td>\n",
       "      <td>34.223992</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>32.997729</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>25</td>\n",
       "      <td>33.464577</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>30</td>\n",
       "      <td>31.099498</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>35</td>\n",
       "      <td>26.546993</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>40</td>\n",
       "      <td>24.365505</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>k403</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>45</td>\n",
       "      <td>22.050126</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>s185</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>s185</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>5</td>\n",
       "      <td>43.878496</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>s185</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>10</td>\n",
       "      <td>37.614948</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>s185</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>15</td>\n",
       "      <td>38.177232</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>s185</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>20</td>\n",
       "      <td>36.866876</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>s185</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>25</td>\n",
       "      <td>33.949940</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>s185</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>30</td>\n",
       "      <td>32.959671</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>s185</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>35</td>\n",
       "      <td>28.328531</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>s185</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>40</td>\n",
       "      <td>25.472143</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>s185</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>45</td>\n",
       "      <td>23.343598</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Mouse ID Drug Regimen     Sex  Age_months  Weight (g)  Timepoint  \\\n",
       "0      k403     Ramicane    Male          21          16          0   \n",
       "1      k403     Ramicane    Male          21          16          5   \n",
       "2      k403     Ramicane    Male          21          16         10   \n",
       "3      k403     Ramicane    Male          21          16         15   \n",
       "4      k403     Ramicane    Male          21          16         20   \n",
       "5      k403     Ramicane    Male          21          16         25   \n",
       "6      k403     Ramicane    Male          21          16         30   \n",
       "7      k403     Ramicane    Male          21          16         35   \n",
       "8      k403     Ramicane    Male          21          16         40   \n",
       "9      k403     Ramicane    Male          21          16         45   \n",
       "10     s185    Capomulin  Female           3          17          0   \n",
       "11     s185    Capomulin  Female           3          17          5   \n",
       "12     s185    Capomulin  Female           3          17         10   \n",
       "13     s185    Capomulin  Female           3          17         15   \n",
       "14     s185    Capomulin  Female           3          17         20   \n",
       "15     s185    Capomulin  Female           3          17         25   \n",
       "16     s185    Capomulin  Female           3          17         30   \n",
       "17     s185    Capomulin  Female           3          17         35   \n",
       "18     s185    Capomulin  Female           3          17         40   \n",
       "19     s185    Capomulin  Female           3          17         45   \n",
       "\n",
       "    Tumor Volume (mm3)  Metastatic Sites  \n",
       "0            45.000000                 0  \n",
       "1            38.825898                 0  \n",
       "2            35.014271                 1  \n",
       "3            34.223992                 1  \n",
       "4            32.997729                 1  \n",
       "5            33.464577                 1  \n",
       "6            31.099498                 1  \n",
       "7            26.546993                 1  \n",
       "8            24.365505                 1  \n",
       "9            22.050126                 1  \n",
       "10           45.000000                 0  \n",
       "11           43.878496                 0  \n",
       "12           37.614948                 0  \n",
       "13           38.177232                 0  \n",
       "14           36.866876                 0  \n",
       "15           33.949940                 0  \n",
       "16           32.959671                 1  \n",
       "17           28.328531                 1  \n",
       "18           25.472143                 1  \n",
       "19           23.343598                 1  "
      ]
     },
     "execution_count": 367,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tumor_animal_study.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 369,
   "metadata": {},
   "outputs": [],
   "source": [
    "tumorvol = tumor_animal_study.loc[tumor_animal_study.groupby(['Mouse ID', 'Drug Regimen'])['Timepoint'].idxmax()]\n",
    "tumorvol = tumorvol.loc[tumorvol['Drug Regimen'].isin(['Capomulin','Ramicane','Infubinol','Ceftamin'])]\n",
    "tumorvol = tumorvol.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 370,
   "metadata": {},
   "outputs": [],
   "source": [
    "Capomulin = (tumor_animal_study.loc[tumor_animal_study['Drug Regimen'] == 'Capomulin'])\n",
    "Capomulin_tumor_vol = Capomulin.loc[Capomulin.groupby('Mouse ID').Timepoint.idxmax()]\n",
    "\n",
    "Ramicane = tumor_animal_study.loc[tumor_animal_study['Drug Regimen'] == 'Ramicane']\n",
    "Ramicane_vol = Ramicane.loc[Ramicane.groupby('Mouse ID')['Timepoint'].idxmax()]\n",
    "\n",
    "\n",
    "Infubinol = tumor_animal_study.loc[tumor_animal_study['Drug Regimen'] == 'Infubinol']\n",
    "Infubinol_vol = Infubinol.loc[Infubinol.groupby('Mouse ID').Timepoint.idxmax()]\n",
    "\n",
    "Ceftamin = tumor_animal_study.loc[tumor_animal_study['Drug Regimen'] == 'Ceftamin']\n",
    "Ceftamin_vol = Ceftamin.loc[Ceftamin.groupby('Mouse ID').Timepoint.idxmax()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 378,
   "metadata": {},
   "outputs": [],
   "source": [
    "tumorvol = tumor_animal_study.loc[tumor_animal_study.groupby(['Mouse ID', 'Drug Regimen'])['Timepoint'].idxmax()]\n",
    "tumorvol_max_timepoint = tumorvol[['Mouse ID','Timepoint']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 379,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mouse ID</th>\n",
       "      <th>Timepoint</th>\n",
       "      <th>Drug Regimen</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age_months</th>\n",
       "      <th>Weight (g)</th>\n",
       "      <th>Tumor Volume (mm3)</th>\n",
       "      <th>Metastatic Sites</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>a203</td>\n",
       "      <td>45</td>\n",
       "      <td>Infubinol</td>\n",
       "      <td>Female</td>\n",
       "      <td>20</td>\n",
       "      <td>23</td>\n",
       "      <td>67.973419</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>a251</td>\n",
       "      <td>45</td>\n",
       "      <td>Infubinol</td>\n",
       "      <td>Female</td>\n",
       "      <td>21</td>\n",
       "      <td>25</td>\n",
       "      <td>65.525743</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>a262</td>\n",
       "      <td>45</td>\n",
       "      <td>Placebo</td>\n",
       "      <td>Female</td>\n",
       "      <td>17</td>\n",
       "      <td>29</td>\n",
       "      <td>70.717621</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>a275</td>\n",
       "      <td>45</td>\n",
       "      <td>Ceftamin</td>\n",
       "      <td>Female</td>\n",
       "      <td>20</td>\n",
       "      <td>28</td>\n",
       "      <td>62.999356</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>a366</td>\n",
       "      <td>30</td>\n",
       "      <td>Stelasyn</td>\n",
       "      <td>Female</td>\n",
       "      <td>16</td>\n",
       "      <td>29</td>\n",
       "      <td>63.440686</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>a401</td>\n",
       "      <td>45</td>\n",
       "      <td>Zoniferol</td>\n",
       "      <td>Female</td>\n",
       "      <td>8</td>\n",
       "      <td>25</td>\n",
       "      <td>66.794156</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>a411</td>\n",
       "      <td>45</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>3</td>\n",
       "      <td>22</td>\n",
       "      <td>38.407618</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>a444</td>\n",
       "      <td>45</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Female</td>\n",
       "      <td>10</td>\n",
       "      <td>25</td>\n",
       "      <td>43.047543</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>a457</td>\n",
       "      <td>10</td>\n",
       "      <td>Ketapril</td>\n",
       "      <td>Female</td>\n",
       "      <td>11</td>\n",
       "      <td>30</td>\n",
       "      <td>49.783419</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>a492</td>\n",
       "      <td>45</td>\n",
       "      <td>Stelasyn</td>\n",
       "      <td>Male</td>\n",
       "      <td>20</td>\n",
       "      <td>25</td>\n",
       "      <td>60.122011</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>a520</td>\n",
       "      <td>45</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>13</td>\n",
       "      <td>21</td>\n",
       "      <td>38.810366</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>a577</td>\n",
       "      <td>30</td>\n",
       "      <td>Infubinol</td>\n",
       "      <td>Female</td>\n",
       "      <td>6</td>\n",
       "      <td>25</td>\n",
       "      <td>57.031862</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>a644</td>\n",
       "      <td>45</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Female</td>\n",
       "      <td>7</td>\n",
       "      <td>17</td>\n",
       "      <td>32.978522</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>a685</td>\n",
       "      <td>45</td>\n",
       "      <td>Infubinol</td>\n",
       "      <td>Male</td>\n",
       "      <td>8</td>\n",
       "      <td>30</td>\n",
       "      <td>66.083066</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>a699</td>\n",
       "      <td>45</td>\n",
       "      <td>Propriva</td>\n",
       "      <td>Female</td>\n",
       "      <td>5</td>\n",
       "      <td>28</td>\n",
       "      <td>62.191414</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>a788</td>\n",
       "      <td>30</td>\n",
       "      <td>Zoniferol</td>\n",
       "      <td>Male</td>\n",
       "      <td>5</td>\n",
       "      <td>30</td>\n",
       "      <td>60.413709</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>a818</td>\n",
       "      <td>45</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Female</td>\n",
       "      <td>12</td>\n",
       "      <td>28</td>\n",
       "      <td>74.997764</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>a897</td>\n",
       "      <td>45</td>\n",
       "      <td>Placebo</td>\n",
       "      <td>Male</td>\n",
       "      <td>7</td>\n",
       "      <td>28</td>\n",
       "      <td>72.255963</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>a963</td>\n",
       "      <td>45</td>\n",
       "      <td>Stelasyn</td>\n",
       "      <td>Female</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>62.765093</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>b128</td>\n",
       "      <td>45</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>9</td>\n",
       "      <td>22</td>\n",
       "      <td>38.982878</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>b313</td>\n",
       "      <td>25</td>\n",
       "      <td>Zoniferol</td>\n",
       "      <td>Male</td>\n",
       "      <td>12</td>\n",
       "      <td>27</td>\n",
       "      <td>55.745146</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>b447</td>\n",
       "      <td>0</td>\n",
       "      <td>Ceftamin</td>\n",
       "      <td>Male</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>b487</td>\n",
       "      <td>25</td>\n",
       "      <td>Ceftamin</td>\n",
       "      <td>Female</td>\n",
       "      <td>6</td>\n",
       "      <td>28</td>\n",
       "      <td>56.057749</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>b559</td>\n",
       "      <td>45</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Male</td>\n",
       "      <td>20</td>\n",
       "      <td>26</td>\n",
       "      <td>73.051363</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>b742</td>\n",
       "      <td>45</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Male</td>\n",
       "      <td>7</td>\n",
       "      <td>21</td>\n",
       "      <td>38.939633</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>b759</td>\n",
       "      <td>30</td>\n",
       "      <td>Ceftamin</td>\n",
       "      <td>Female</td>\n",
       "      <td>12</td>\n",
       "      <td>25</td>\n",
       "      <td>55.742829</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>b879</td>\n",
       "      <td>45</td>\n",
       "      <td>Stelasyn</td>\n",
       "      <td>Female</td>\n",
       "      <td>4</td>\n",
       "      <td>26</td>\n",
       "      <td>72.555239</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>c139</td>\n",
       "      <td>45</td>\n",
       "      <td>Infubinol</td>\n",
       "      <td>Male</td>\n",
       "      <td>11</td>\n",
       "      <td>28</td>\n",
       "      <td>72.226731</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>c264</td>\n",
       "      <td>45</td>\n",
       "      <td>Zoniferol</td>\n",
       "      <td>Female</td>\n",
       "      <td>11</td>\n",
       "      <td>27</td>\n",
       "      <td>67.942121</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>c282</td>\n",
       "      <td>45</td>\n",
       "      <td>Placebo</td>\n",
       "      <td>Male</td>\n",
       "      <td>12</td>\n",
       "      <td>27</td>\n",
       "      <td>65.815165</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219</th>\n",
       "      <td>w697</td>\n",
       "      <td>35</td>\n",
       "      <td>Stelasyn</td>\n",
       "      <td>Female</td>\n",
       "      <td>14</td>\n",
       "      <td>30</td>\n",
       "      <td>63.689042</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>220</th>\n",
       "      <td>w746</td>\n",
       "      <td>5</td>\n",
       "      <td>Propriva</td>\n",
       "      <td>Male</td>\n",
       "      <td>1</td>\n",
       "      <td>26</td>\n",
       "      <td>49.453270</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>w914</td>\n",
       "      <td>45</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Male</td>\n",
       "      <td>24</td>\n",
       "      <td>21</td>\n",
       "      <td>36.041047</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>x111</td>\n",
       "      <td>10</td>\n",
       "      <td>Propriva</td>\n",
       "      <td>Female</td>\n",
       "      <td>24</td>\n",
       "      <td>27</td>\n",
       "      <td>49.122969</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>x209</td>\n",
       "      <td>10</td>\n",
       "      <td>Propriva</td>\n",
       "      <td>Female</td>\n",
       "      <td>7</td>\n",
       "      <td>29</td>\n",
       "      <td>48.929895</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>224</th>\n",
       "      <td>x226</td>\n",
       "      <td>0</td>\n",
       "      <td>Ceftamin</td>\n",
       "      <td>Male</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>x264</td>\n",
       "      <td>40</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Female</td>\n",
       "      <td>21</td>\n",
       "      <td>27</td>\n",
       "      <td>63.283288</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>x336</td>\n",
       "      <td>0</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Female</td>\n",
       "      <td>4</td>\n",
       "      <td>29</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>x401</td>\n",
       "      <td>45</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Female</td>\n",
       "      <td>16</td>\n",
       "      <td>15</td>\n",
       "      <td>28.484033</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>x402</td>\n",
       "      <td>45</td>\n",
       "      <td>Stelasyn</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>28</td>\n",
       "      <td>61.619606</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>229</th>\n",
       "      <td>x581</td>\n",
       "      <td>45</td>\n",
       "      <td>Ceftamin</td>\n",
       "      <td>Female</td>\n",
       "      <td>19</td>\n",
       "      <td>28</td>\n",
       "      <td>64.634949</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>x613</td>\n",
       "      <td>15</td>\n",
       "      <td>Zoniferol</td>\n",
       "      <td>Female</td>\n",
       "      <td>2</td>\n",
       "      <td>29</td>\n",
       "      <td>48.077646</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>x773</td>\n",
       "      <td>45</td>\n",
       "      <td>Placebo</td>\n",
       "      <td>Female</td>\n",
       "      <td>21</td>\n",
       "      <td>30</td>\n",
       "      <td>58.634971</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>x822</td>\n",
       "      <td>45</td>\n",
       "      <td>Ceftamin</td>\n",
       "      <td>Male</td>\n",
       "      <td>3</td>\n",
       "      <td>29</td>\n",
       "      <td>61.386660</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <td>x930</td>\n",
       "      <td>25</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Male</td>\n",
       "      <td>13</td>\n",
       "      <td>26</td>\n",
       "      <td>53.726101</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>y163</td>\n",
       "      <td>45</td>\n",
       "      <td>Infubinol</td>\n",
       "      <td>Female</td>\n",
       "      <td>17</td>\n",
       "      <td>27</td>\n",
       "      <td>67.685569</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>y260</td>\n",
       "      <td>45</td>\n",
       "      <td>Ketapril</td>\n",
       "      <td>Female</td>\n",
       "      <td>7</td>\n",
       "      <td>25</td>\n",
       "      <td>62.909441</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>y449</td>\n",
       "      <td>15</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>19</td>\n",
       "      <td>24</td>\n",
       "      <td>44.183451</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>y478</td>\n",
       "      <td>45</td>\n",
       "      <td>Placebo</td>\n",
       "      <td>Female</td>\n",
       "      <td>3</td>\n",
       "      <td>25</td>\n",
       "      <td>66.842635</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>y601</td>\n",
       "      <td>5</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Female</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>48.475003</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>y769</td>\n",
       "      <td>45</td>\n",
       "      <td>Ceftamin</td>\n",
       "      <td>Female</td>\n",
       "      <td>6</td>\n",
       "      <td>27</td>\n",
       "      <td>68.594745</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>y793</td>\n",
       "      <td>45</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>Male</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>31.896238</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>y865</td>\n",
       "      <td>45</td>\n",
       "      <td>Ceftamin</td>\n",
       "      <td>Male</td>\n",
       "      <td>23</td>\n",
       "      <td>26</td>\n",
       "      <td>64.729837</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>z234</td>\n",
       "      <td>5</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Female</td>\n",
       "      <td>19</td>\n",
       "      <td>27</td>\n",
       "      <td>46.129357</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>z314</td>\n",
       "      <td>5</td>\n",
       "      <td>Stelasyn</td>\n",
       "      <td>Female</td>\n",
       "      <td>21</td>\n",
       "      <td>28</td>\n",
       "      <td>45.934712</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>z435</td>\n",
       "      <td>10</td>\n",
       "      <td>Propriva</td>\n",
       "      <td>Female</td>\n",
       "      <td>12</td>\n",
       "      <td>26</td>\n",
       "      <td>48.710661</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>z578</td>\n",
       "      <td>45</td>\n",
       "      <td>Ramicane</td>\n",
       "      <td>Male</td>\n",
       "      <td>11</td>\n",
       "      <td>16</td>\n",
       "      <td>30.638696</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>z581</td>\n",
       "      <td>45</td>\n",
       "      <td>Infubinol</td>\n",
       "      <td>Female</td>\n",
       "      <td>24</td>\n",
       "      <td>25</td>\n",
       "      <td>62.754451</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>z795</td>\n",
       "      <td>45</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Female</td>\n",
       "      <td>13</td>\n",
       "      <td>29</td>\n",
       "      <td>65.741070</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>z969</td>\n",
       "      <td>45</td>\n",
       "      <td>Naftisol</td>\n",
       "      <td>Male</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>73.867845</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>249 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Mouse ID  Timepoint Drug Regimen     Sex  Age_months  Weight (g)  \\\n",
       "0       a203         45    Infubinol  Female          20          23   \n",
       "1       a251         45    Infubinol  Female          21          25   \n",
       "2       a262         45      Placebo  Female          17          29   \n",
       "3       a275         45     Ceftamin  Female          20          28   \n",
       "4       a366         30     Stelasyn  Female          16          29   \n",
       "5       a401         45    Zoniferol  Female           8          25   \n",
       "6       a411         45     Ramicane    Male           3          22   \n",
       "7       a444         45     Ramicane  Female          10          25   \n",
       "8       a457         10     Ketapril  Female          11          30   \n",
       "9       a492         45     Stelasyn    Male          20          25   \n",
       "10      a520         45     Ramicane    Male          13          21   \n",
       "11      a577         30    Infubinol  Female           6          25   \n",
       "12      a644         45     Ramicane  Female           7          17   \n",
       "13      a685         45    Infubinol    Male           8          30   \n",
       "14      a699         45     Propriva  Female           5          28   \n",
       "15      a788         30    Zoniferol    Male           5          30   \n",
       "16      a818         45     Naftisol  Female          12          28   \n",
       "17      a897         45      Placebo    Male           7          28   \n",
       "18      a963         45     Stelasyn  Female          23          27   \n",
       "19      b128         45    Capomulin  Female           9          22   \n",
       "20      b313         25    Zoniferol    Male          12          27   \n",
       "21      b447          0     Ceftamin    Male           2          30   \n",
       "22      b487         25     Ceftamin  Female           6          28   \n",
       "23      b559         45     Naftisol    Male          20          26   \n",
       "24      b742         45    Capomulin    Male           7          21   \n",
       "25      b759         30     Ceftamin  Female          12          25   \n",
       "26      b879         45     Stelasyn  Female           4          26   \n",
       "27      c139         45    Infubinol    Male          11          28   \n",
       "28      c264         45    Zoniferol  Female          11          27   \n",
       "29      c282         45      Placebo    Male          12          27   \n",
       "..       ...        ...          ...     ...         ...         ...   \n",
       "219     w697         35     Stelasyn  Female          14          30   \n",
       "220     w746          5     Propriva    Male           1          26   \n",
       "221     w914         45    Capomulin    Male          24          21   \n",
       "222     x111         10     Propriva  Female          24          27   \n",
       "223     x209         10     Propriva  Female           7          29   \n",
       "224     x226          0     Ceftamin    Male          23          28   \n",
       "225     x264         40     Naftisol  Female          21          27   \n",
       "226     x336          0     Naftisol  Female           4          29   \n",
       "227     x401         45    Capomulin  Female          16          15   \n",
       "228     x402         45     Stelasyn    Male          21          28   \n",
       "229     x581         45     Ceftamin  Female          19          28   \n",
       "230     x613         15    Zoniferol  Female           2          29   \n",
       "231     x773         45      Placebo  Female          21          30   \n",
       "232     x822         45     Ceftamin    Male           3          29   \n",
       "233     x930         25     Naftisol    Male          13          26   \n",
       "234     y163         45    Infubinol  Female          17          27   \n",
       "235     y260         45     Ketapril  Female           7          25   \n",
       "236     y449         15     Ramicane    Male          19          24   \n",
       "237     y478         45      Placebo  Female           3          25   \n",
       "238     y601          5     Naftisol  Female          23          25   \n",
       "239     y769         45     Ceftamin  Female           6          27   \n",
       "240     y793         45    Capomulin    Male          17          17   \n",
       "241     y865         45     Ceftamin    Male          23          26   \n",
       "242     z234          5     Naftisol  Female          19          27   \n",
       "243     z314          5     Stelasyn  Female          21          28   \n",
       "244     z435         10     Propriva  Female          12          26   \n",
       "245     z578         45     Ramicane    Male          11          16   \n",
       "246     z581         45    Infubinol  Female          24          25   \n",
       "247     z795         45     Naftisol  Female          13          29   \n",
       "248     z969         45     Naftisol    Male           9          30   \n",
       "\n",
       "     Tumor Volume (mm3)  Metastatic Sites  \n",
       "0             67.973419                 2  \n",
       "1             65.525743                 1  \n",
       "2             70.717621                 4  \n",
       "3             62.999356                 3  \n",
       "4             63.440686                 1  \n",
       "5             66.794156                 4  \n",
       "6             38.407618                 1  \n",
       "7             43.047543                 0  \n",
       "8             49.783419                 0  \n",
       "9             60.122011                 1  \n",
       "10            38.810366                 1  \n",
       "11            57.031862                 2  \n",
       "12            32.978522                 1  \n",
       "13            66.083066                 3  \n",
       "14            62.191414                 1  \n",
       "15            60.413709                 1  \n",
       "16            74.997764                 2  \n",
       "17            72.255963                 4  \n",
       "18            62.765093                 1  \n",
       "19            38.982878                 2  \n",
       "20            55.745146                 1  \n",
       "21            45.000000                 0  \n",
       "22            56.057749                 1  \n",
       "23            73.051363                 1  \n",
       "24            38.939633                 0  \n",
       "25            55.742829                 1  \n",
       "26            72.555239                 2  \n",
       "27            72.226731                 2  \n",
       "28            67.942121                 2  \n",
       "29            65.815165                 2  \n",
       "..                  ...               ...  \n",
       "219           63.689042                 3  \n",
       "220           49.453270                 0  \n",
       "221           36.041047                 2  \n",
       "222           49.122969                 1  \n",
       "223           48.929895                 0  \n",
       "224           45.000000                 0  \n",
       "225           63.283288                 4  \n",
       "226           45.000000                 0  \n",
       "227           28.484033                 0  \n",
       "228           61.619606                 3  \n",
       "229           64.634949                 3  \n",
       "230           48.077646                 0  \n",
       "231           58.634971                 4  \n",
       "232           61.386660                 3  \n",
       "233           53.726101                 0  \n",
       "234           67.685569                 3  \n",
       "235           62.909441                 4  \n",
       "236           44.183451                 0  \n",
       "237           66.842635                 1  \n",
       "238           48.475003                 1  \n",
       "239           68.594745                 4  \n",
       "240           31.896238                 2  \n",
       "241           64.729837                 3  \n",
       "242           46.129357                 1  \n",
       "243           45.934712                 0  \n",
       "244           48.710661                 0  \n",
       "245           30.638696                 0  \n",
       "246           62.754451                 3  \n",
       "247           65.741070                 3  \n",
       "248           73.867845                 4  \n",
       "\n",
       "[249 rows x 8 columns]"
      ]
     },
     "execution_count": 379,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Calculate the final tumor volume of each mouse across four of the treatment regimens:  \n",
    "# Capomulin, Ramicane, Infubinol, and Ceftamin\n",
    "\n",
    "#could do the above way and join into a dataframe instead I decided to set it up this way ( no need to merge)\n",
    "# Start by getting the last (greatest) timepoint for each mouse\n",
    "\n",
    "tumorvol = tumorvol.loc[tumorvol['Drug Regimen'].isin(['Capomulin','Ramicane','Infubinol','Ceftamin'])]\n",
    "tumorvol = tumorvol.reset_index(drop=True)\n",
    "\n",
    "\n",
    "# Merge this group df with the original dataframe to get the tumor volume at the last timepoint\n",
    "merged_tumor_animal_study = tumorvol_max_timepoint.merge(tumor_animal_study,on=['Mouse ID','Timepoint'],how='left')\n",
    "merged_tumor_animal_study"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Capomulin = tumorvol.loc[tumorvol['Drug Regimen'] == 'Capomulin']\n",
    "Ramicane = tumorvol.loc[tumorvol['Drug Regimen'] == 'Ramicane']\n",
    "Infubinol = tumorvol.loc[tumorvol['Drug Regimen'] == 'Infubinol']\n",
    "Ceftamin = tumorvol.loc[tumorvol['Drug Regimen'] == 'Ceftamin']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 372,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The lower quartile for Capomulin Drug Regimen tumor volume data is: 32.37735684\n",
      "The upper quartile of Capomulin Drug Regimen tumor volume data is: 40.1592203\n",
      "The interquartile range of Capomulin Drug Regimen tumor volume data is: -7.781863460000004\n",
      "The the median of Capomulin Drug Regimen tumor volume data is: 38.125164399999996 \n",
      "\n",
      "Tumor Values below 44.05015203000001 could be outliers for Capomulin Drug Regimen.\n",
      "Tumor Values above 28.486425109999995 could be outliers for Capomulin Drug Regimen.\n",
      "\n",
      "The lower quartile for Ramicane Drug Regimen tumor volume data is: 31.56046955\n",
      "The upper quartile of Ramicane Drug Regimen tumor volume data is: 40.65900627\n",
      "The interquartile range of Ramicane Drug Regimen tumor volume data is: -9.098536719999998\n",
      "The the median of Ramicane Drug Regimen tumor volume data is: 36.56165229 \n",
      "\n",
      "Tumor Values below 45.20827463 could be outliers for Ramicane.\n",
      "Tumor Values above 27.01120119 could be outliers for Ramicane.\n",
      "\n",
      "The lower quartile for Infubinol Drug Regimen tumor volume data is: 54.04860769\n",
      "The upper quartile of Infubinol Drug Regimen tumor volume data is: 65.52574285\n",
      "The interquartile range of Infubinol Drug Regimen tumor volume data is: -11.477135160000003\n",
      "The the median of Infubinol Drug Regimen tumor volume data is: 60.16518046 \n",
      "\n",
      "Tumor Values below 71.26431043 could be outliers for Infubinol.\n",
      "Tumor Values above 48.310040109999996 could be outliers for Infubinol.\n",
      "\n",
      "\n",
      "The lower quartile for Ceftamin Drug Regimen tumor volume data is: 48.72207785\n",
      "The upper quartile of Ceftamin Drug Regimen tumor volume data is: 64.29983003\n",
      "The interquartile range of Ceftamin Drug Regimen tumor volume data is: -15.577752179999997\n",
      "The the median of Ceftamin Drug Regimen tumor volume data is: 59.85195552 \n",
      "\n",
      "Tumor Values below 72.08870612 could be outliers for Ceftamin.\n",
      "Tumor Values above 40.93320176 could be outliers for Ceftamin.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Put treatments into a list for for loop (and later for plot labels)\n",
    "treatments = merged_tumor_animal_study['Drug Regimen'].unique()\n",
    "treatments\n",
    "# Create empty list to fill with tumor vol data (for plotting)\n",
    "\n",
    "tumor_vol_data_list = []\n",
    "tumor_vol_data = tumorvol['Tumor Volume (mm3)']\n",
    "tumor_vol_data_list = tumor_vol_data.tolist()\n",
    "type(tumor_vol_data_list)\n",
    "\n",
    "Capomulin_vol_data = Capomulin['Tumor Volume (mm3)']\n",
    "Capomulin_vol_list = tumor_vol_data.tolist()\n",
    "\n",
    "Ramicane_vol_data = Ramicane['Tumor Volume (mm3)']\n",
    "Ramicane_vol_list = Ramicane_vol_data.tolist()\n",
    "\n",
    "Infubinol_vol_data = Infubinol['Tumor Volume (mm3)']\n",
    "Infubinol_vol_list = Infubinol_vol_data.tolist()\n",
    "\n",
    "Ceftamin_vol_data = Ceftamin['Tumor Volume (mm3)']\n",
    "Ceftamin_vol_list = Ceftamin_vol_data.tolist()\n",
    "\n",
    "for aTreatment in treatments:\n",
    "    print(aTreatment)\n",
    "    \n",
    "    \n",
    "\n",
    "# Calculate the IQR and quantitatively determine if there are any potential outliers. \n",
    "#Capomulin\n",
    "quartiles = Capomulin_vol_data.quantile([.25,.5,.75])\n",
    "lowerq = quartiles[.25]\n",
    "upperq = quartiles[.75]\n",
    "iqr = lowerq-upperq\n",
    "\n",
    "print(f\"The lower quartile for Capomulin Drug Regimen tumor volume data is: {lowerq}\")\n",
    "print(f\"The upper quartile of Capomulin Drug Regimen tumor volume data is: {upperq}\")\n",
    "print(f\"The interquartile range of Capomulin Drug Regimen tumor volume data is: {iqr}\")\n",
    "print(f\"The the median of Capomulin Drug Regimen tumor volume data is: {quartiles[0.5]} \")\n",
    "print()\n",
    "lower_bound = lowerq - (1.5*iqr)\n",
    "upper_bound = upperq + (1.5*iqr)\n",
    "print(f\"Tumor Values below {lower_bound} could be outliers for Capomulin Drug Regimen.\")\n",
    "print(f\"Tumor Values above {upper_bound} could be outliers for Capomulin Drug Regimen.\")\n",
    "print()\n",
    "#Ramicane\n",
    "quartiles = Ramicane_vol_data.quantile([.25,.5,.75])\n",
    "lowerq = quartiles[.25]\n",
    "upperq = quartiles[.75]\n",
    "iqr = lowerq-upperq\n",
    "\n",
    "print(f\"The lower quartile for Ramicane Drug Regimen tumor volume data is: {lowerq}\")\n",
    "print(f\"The upper quartile of Ramicane Drug Regimen tumor volume data is: {upperq}\")\n",
    "print(f\"The interquartile range of Ramicane Drug Regimen tumor volume data is: {iqr}\")\n",
    "print(f\"The the median of Ramicane Drug Regimen tumor volume data is: {quartiles[0.5]} \")\n",
    "print()\n",
    "lower_bound = lowerq - (1.5*iqr)\n",
    "upper_bound = upperq + (1.5*iqr)\n",
    "print(f\"Tumor Values below {lower_bound} could be outliers for Ramicane.\")\n",
    "print(f\"Tumor Values above {upper_bound} could be outliers for Ramicane.\")\n",
    "print()\n",
    "\n",
    "#Infubinol\n",
    "quartiles = Infubinol_vol_data.quantile([.25,.5,.75])\n",
    "lowerq = quartiles[.25]\n",
    "upperq = quartiles[.75]\n",
    "iqr = lowerq-upperq\n",
    "print(f\"The lower quartile for Infubinol Drug Regimen tumor volume data is: {lowerq}\")\n",
    "print(f\"The upper quartile of Infubinol Drug Regimen tumor volume data is: {upperq}\")\n",
    "print(f\"The interquartile range of Infubinol Drug Regimen tumor volume data is: {iqr}\")\n",
    "print(f\"The the median of Infubinol Drug Regimen tumor volume data is: {quartiles[0.5]} \")\n",
    "print()\n",
    "lower_bound = lowerq - (1.5*iqr)\n",
    "upper_bound = upperq + (1.5*iqr)\n",
    "print(f\"Tumor Values below {lower_bound} could be outliers for Infubinol.\")\n",
    "print(f\"Tumor Values above {upper_bound} could be outliers for Infubinol.\")\n",
    "print()\n",
    "\n",
    "#Ceftamin\n",
    "quartiles = Ceftamin_vol_data.quantile([.25,.5,.75])\n",
    "lowerq = quartiles[.25]\n",
    "upperq = quartiles[.75]\n",
    "iqr = lowerq-upperq\n",
    "print()\n",
    "print(f\"The lower quartile for Ceftamin Drug Regimen tumor volume data is: {lowerq}\")\n",
    "print(f\"The upper quartile of Ceftamin Drug Regimen tumor volume data is: {upperq}\")\n",
    "print(f\"The interquartile range of Ceftamin Drug Regimen tumor volume data is: {iqr}\")\n",
    "print(f\"The the median of Ceftamin Drug Regimen tumor volume data is: {quartiles[0.5]} \")\n",
    "print()\n",
    "lower_bound = lowerq - (1.5*iqr)\n",
    "upper_bound = upperq + (1.5*iqr)\n",
    "print(f\"Tumor Values below {lower_bound} could be outliers for Ceftamin.\")\n",
    "print(f\"Tumor Values above {upper_bound} could be outliers for Ceftamin.\")\n",
    "print()\n",
    "    \n",
    "    # Locate the rows which contain mice on each drug and get the tumor volumes    \n",
    "#    for index, arow in tumorvol.iterrows():\n",
    "#       print(f'Mice: {arow[\"Mouse ID\"]} Regimen: {arow[\"Drug Regimen\"]}')\n",
    "    # add subset \n",
    "    \n",
    "    \n",
    "    # Determine outliers using upper and lower bounds\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 373,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate a box plot of the final tumor volume of each mouse across four regimens of interest\n",
    "all_tumor_vols = [Capomulin_vol_list,Ramicane_vol_list,Infubinol_vol_list,Ceftamin_vol_list]\n",
    "red_square = dict(markerfacecolor='r', marker='s')\n",
    "fig1, ax1 = plt.subplots()\n",
    "ax1.set_title('Final Tumor volumes')\n",
    "ax1.set_ylabel('Regimens')\n",
    "ax1.boxplot(all_tumor_vols,flierprops=red_square, vert=False, whis=0.75)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 333,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mouse ID</th>\n",
       "      <th>Drug Regimen</th>\n",
       "      <th>Timepoint</th>\n",
       "      <th>Tumor Volume (mm3)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>b128</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>38.982878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>b742</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>38.939633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>f966</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>20</td>\n",
       "      <td>30.485985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>g288</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>37.074024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>g316</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>40.159220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>i557</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>47.685963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>i738</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>37.311846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>j119</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>38.125164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>j246</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>35</td>\n",
       "      <td>38.753265</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>l509</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>41.483008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>l897</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>38.846876</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>m601</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>28.430964</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>m957</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>33.329098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>r157</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>15</td>\n",
       "      <td>46.539206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>r554</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>32.377357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>r944</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>41.581521</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>s185</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>23.343598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>s710</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>40.728578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>t565</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>34.455298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>u364</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>31.023923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>v923</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>40.658124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>w150</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>10</td>\n",
       "      <td>39.952347</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>w914</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>36.041047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>x401</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>28.484033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>y793</td>\n",
       "      <td>Capomulin</td>\n",
       "      <td>45</td>\n",
       "      <td>31.896238</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Mouse ID Drug Regimen  Timepoint  Tumor Volume (mm3)\n",
       "0      b128    Capomulin         45           38.982878\n",
       "1      b742    Capomulin         45           38.939633\n",
       "2      f966    Capomulin         20           30.485985\n",
       "3      g288    Capomulin         45           37.074024\n",
       "4      g316    Capomulin         45           40.159220\n",
       "5      i557    Capomulin         45           47.685963\n",
       "6      i738    Capomulin         45           37.311846\n",
       "7      j119    Capomulin         45           38.125164\n",
       "8      j246    Capomulin         35           38.753265\n",
       "9      l509    Capomulin         45           41.483008\n",
       "10     l897    Capomulin         45           38.846876\n",
       "11     m601    Capomulin         45           28.430964\n",
       "12     m957    Capomulin         45           33.329098\n",
       "13     r157    Capomulin         15           46.539206\n",
       "14     r554    Capomulin         45           32.377357\n",
       "15     r944    Capomulin         45           41.581521\n",
       "16     s185    Capomulin         45           23.343598\n",
       "17     s710    Capomulin         45           40.728578\n",
       "18     t565    Capomulin         45           34.455298\n",
       "19     u364    Capomulin         45           31.023923\n",
       "20     v923    Capomulin         45           40.658124\n",
       "21     w150    Capomulin         10           39.952347\n",
       "22     w914    Capomulin         45           36.041047\n",
       "23     x401    Capomulin         45           28.484033\n",
       "24     y793    Capomulin         45           31.896238"
      ]
     },
     "execution_count": 333,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Capomulin_tumor_vol"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Line and Scatter Plots"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 332,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Generate a line plot of tumor volume vs. time point for a mouse treated with Capomulin\n",
    "\n",
    "Capomulin_tumor_vol = Capomulin_tumor_vol.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Generate a scatter plot of average tumor volume vs. mouse weight for the Capomulin regimen\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Correlation and Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Calculate the correlation coefficient and linear regression model \n",
    "# for mouse weight and average tumor volume for the Capomulin regimen\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
